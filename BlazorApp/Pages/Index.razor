@page "/"
@inject NotificationService _Notifier
@inject TempratureApiService _TempApiService
@inject AuthenticationStateProvider _AuthenticationStateProvider

<PageTitle>Dashboard</PageTitle>
<ErrorBoundary>
   <AuthorizeView Roles="NormalUser">
    <Authorized> 
            <RadzenButton IsBusy="IsBusy" BusyText="Loading" Click="Refresh">Refresh</RadzenButton>

            <RadzenArcGauge Style="width: 300px; height: 300px">
                <RadzenArcGaugeScale Min="-10" Max="40" Step="10">
                    <RadzenArcGaugeScaleValue Value="Info.TempratureC" />
                </RadzenArcGaugeScale>
            </RadzenArcGauge>
    </Authorized>
    <NotAuthorized>
        <h1>You have no permission to see this page</h1>
    </NotAuthorized>
    </AuthorizeView>
</ErrorBoundary>





@code{
    bool IsBusy = false;

    TempraureInfo Info = new TempraureInfo();

    protected override async Task OnInitializedAsync()
    {
        await Refresh();

        await base.OnInitializedAsync();
    }

    public async Task Refresh()
    {
        IsBusy = true;

        try
        {
            Info = await _TempApiService.GetCurrentAsync();
        }
        catch (Exception e)
        {
            _Notifier.Notify(NotificationSeverity.Error, "Error", e.Message);
        }
        IsBusy = false;
    }

}
